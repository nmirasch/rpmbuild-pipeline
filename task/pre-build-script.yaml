---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    tekton.dev/tags: rpm-build
  name: pre-build-script
spec:
  description: |-
    Takes a source artifact and runs an optional custom script to modify its contents.
    It always outputs a source artifact for the next task.
  params:
    - name: source-artifact
      type: string
      description: Trusted Artifact URI from the clone-repository task.
    - name: ociStorage
      type: string
      description: OCI repository for the new Trusted Artifact.
    - name: ociArtifactExpiresAfter
      type: string
      description: Retention period for the new Trusted Artifact.
    - name: pre-build-script-image
      type: string
      description: OCI image with tools for the custom script.
      default: registry.access.redhat.com/ubi9/ubi-minimal:latest
    - name: pre-build-script-content
      type: string
      description: Optional bash script to execute on the source files.
      default: ""
  stepTemplate:
    volumeMounts:
    - mountPath: /var/workdir
      name: workdir
  results:
    - name: OUTPUT_SOURCE_ARTIFACT
      description: The Trusted Artifact URI pointing to the artifact with the (possibly modified) source code.
      type: string
  steps:
  - name: use-trusted-artifact
    image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
    args:
    - use
    - $(params.source-artifact)=/var/workdir/source
  - name: run-pre-build-script
    image: $(params.pre-build-script-image)
    workingDir: /var/workdir/source
    script: |
      set -x
      echo "$(params.pre-build-script-content)" > /var/workdir/pre-build-script.sh
      chmod +x /var/workdir/pre-build-script.sh
      /var/workdir/pre-build-script.sh
      echo "--------------------End of script"
  - name: create-trusted-artifact
    image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
    args:
    - create
    - --store
    - $(params.ociStorage)
    - $(results.OUTPUT_SOURCE_ARTIFACT.path)=/var/workdir/source
    env:
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.ociArtifactExpiresAfter)
  volumes:
  - name: workdir
    emptyDir: {}
